# Logstash Input Plugin
# File: https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html
# JSON Codec: https://www.elastic.co/guide/en/logstash/current/plugins-codecs-json.html

input {
  file {
    path => [ "/usr/share/data/*.json"]
    # sincedb_path => "/usr/share/data/sincedb"
    start_position => "beginning"
    codec => "json"
  }
}

# Logstash Filter Plugins
# Grok: https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html
# Date: https://www.elastic.co/guide/en/logstash/current/plugins-filters-date.html
# Mutate: https://www.elastic.co/guide/en/logstash/current/plugins-filters-mutate.html
# Urldecode: https://www.elastic.co/guide/en/logstash/current/plugins-filters-urldecode.html

filter { 

  date {
    match => ["visit_date","yyyy-MM-dd HH:mm:ss"]
    timezone =>"America/Los_Angeles"
    target => ["@timestamp"]
    locale => "en"
  }

  if [url] {
    grok {
      break_on_match => "false"
      match => { "[url]" => "%{URIPROTO:url_proto}://%{URIHOST:domain}%{URIPATH:url_path}%{URIPARAM:url_params}?" }
      keep_empty_captures => "false"      
    }

    if "." not in [domain] {

      if ":" in [domain] {

        mutate {
          split => ["domain",":"]
            add_field => ["site_domain", "%{[domain][0]}" ]  
        }

        mutate {
            replace => {
              "domain" => "%{[domain][0]}" 
            }  
        }        

      }
      else {
        mutate {
          copy => ["domain","site_domain"]
        }
      }
    }

    else {
      mutate {
        copy => {"domain" => "domain_copy"}
      }

      mutate {
        split => ["domain_copy","."]
          add_field => ["sub_domain", "%{[domain_copy][0]}" ]  
          add_field => ["site_domain", "%{[domain_copy][-2]}.%{[domain_copy][-1]}" ]  
      }

      mutate {  
          # Join together whats left as the class name.
          remove_field  => ["domain_copy"]
      }
    }

    urldecode { 
      field => "url_path" 
    }
  }
}


# Logstash Output Plugins 
# Elasticsearch: https://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html
# StdOut: https://www.elastic.co/guide/en/logstash/current/plugins-outputs-stdout.html

output {
  elasticsearch {
    hosts    => [ 'elasticsearch:9200' ]
    manage_template => "false"
    index => "logstash-browser"
  }
  stdout { }
}
